{"version":3,"sources":["reducers/PokemonContext.js","components/layouts/RegionPokemon.js","components/layouts/Header.js","components/PokeItems.js","pokemonfunc.js","components/PokemonScreen.js","components/layouts/PokemonAbility.js","components/layouts/PokemonBaseStat.js","components/layouts/PokemonEvolve.js","components/SkipPageButtons.js","components/PokemonInfoScreen.js","App.js","types.js","reducers/PokemonReducer.js","reducers/PokemonState.js","index.js"],"names":["PokemonContext","createContext","RegionPokemon","props","regionalPokemon","useContext","className","onChange","e","target","value","clearText","Header","pokemonContext","filterPokemon","removeFilter","filter","useState","text","setText","search","setSearch","location","useLocation","pathname","useEffect","style","position","top","zIndex","Navbar","bg","expand","varient","Brand","to","Toggle","Collapse","id","Form","onSubmit","preventDefault","Control","type","placeholder","Button","variant","PokeItems","name","Card","Img","width","margin","src","Body","Title","toUpperCase","Text","region_data","none","kanto","johto","hoenn","sinnoh","unova","kalos","alola","getPokemonID","url","split","getRegionalPokemonID","PokemonScreen","pokemons","getPokemons","regional_pokemon","Row","xs","md","map","ele","index","Col","pokemon_species","PokemonAbility","info","ListGroup","height","maxHeight","overflowY","as","abilities","Item","color","ability","moves","move","types","PokemonBaseStat","poke","stats","display","gridTemplateColumns","placeItems","stat","role","base_stat","PokemonEvolve","chain_url","getEvolutionChain","clearEvolutionChain","chain","SkipPageButtons","page","justifyContent","parseInt","PokemonInfoScreen","match","getPokemonInfo","resetPokemonInfo","getPokemonSpecies","clearPokemonSpecies","current_pokemon_species","current_pokemon","params","showAbility","setShowAbility","showMoves","setShowMoves","showType","setShowType","showInfo","infotype","onClick","evolution_chain","App","exact","path","component","GET_POKEMON","FILTER","REMOVE_FILTER","REGIONAL_POKEMON","CLEAR_REGIONAL_FILTER","GET_POKEMON_INFO","RESET_POKEMON_INFO","GET_POKEMON_SPECIES","CLEAR_POKEMON_SPECIES","GET_POKEMON_CHAIN","CLEAR_POKEMON_CHAIN","PokemonReducer","state","action","payload","f","RegExp","console","log","PokemonState","useReducer","dispatch","a","axios","get","headers","data","results","region","clearRegionalFilter","regional","pokemon_entries","gen","push","species","evolves_to","newChain","message","Provider","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12d49584.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst PokemonContext = createContext();\r\n\r\nexport default PokemonContext;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport PokemonContext from \"../../reducers/PokemonContext\";\r\nconst RegionPokemon = (props) => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const { regionalPokemon } = pokemonContext;\r\n\r\n  const onChange = (e) => {\r\n    regionalPokemon(e.target.value);\r\n    props.clearText();\r\n  };\r\n\r\n  return (\r\n    <select className=\"custom-select\" onChange={onChange}>\r\n      <option value=\"none\">Select Region</option>\r\n      <option value=\"kanto\">Kanto</option>\r\n      <option value=\"johto\">Johto</option>\r\n      <option value=\"hoenn\">Hoenn</option>\r\n      <option value=\"sinnoh\">Sinnoh</option>\r\n      <option value=\"unova\">Unova</option>\r\n      <option value=\"kalos\">Kalos</option>\r\n      <option value=\"alola\">Alola</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default RegionPokemon;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport { Navbar, Button, Form } from \"react-bootstrap\";\r\nimport PokemonContext from \"../../reducers/PokemonContext\";\r\nimport RegionPokemon from \"./RegionPokemon\";\r\nconst Header = () => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const { filterPokemon, removeFilter, filter } = pokemonContext;\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [search, setSearch] = useState(false);\r\n  // console.log(window.location.pathname);\r\n  const location = useLocation().pathname;\r\n  useEffect(() => {\r\n    if (filter == null) {\r\n      setText(\"\");\r\n    }\r\n  }, [filter]);\r\n  useEffect(() => {\r\n    if (location === \"/\") {\r\n      setSearch(true);\r\n    } else {\r\n      setSearch(false);\r\n    }\r\n  }, [location]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    removeFilter();\r\n    filterPokemon(text);\r\n    setText(\"\");\r\n  };\r\n  const clearText = () => {\r\n    setText(\"\");\r\n    removeFilter();\r\n  };\r\n  return (\r\n    <header style={{ position: \"sticky\", top: \"0\", zIndex: \"2\" }}>\r\n      <Navbar bg=\"primary\" expand=\"lg\" varient=\"dark\">\r\n        <Navbar.Brand>\r\n          {\" \"}\r\n          <Link to=\"/\" className=\"text-white text-decoration-none\">\r\n            <i className=\"fas fa-home mx-.5\"></i>\r\n            POKEMON API{\" \"}\r\n          </Link>\r\n        </Navbar.Brand>\r\n        {search && (\r\n          <>\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\">\r\n              <Form onSubmit={submitHandler} className=\"d-flex my-1 mx-auto\">\r\n                <div className=\"input-group\">\r\n                  <Form.Control\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    className=\"mr-2 from-control\"\r\n                    aria-label=\"Search\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                  ></Form.Control>\r\n                </div>\r\n                <Button variant=\"outline-success\" className=\"btn btn-light\">\r\n                  Search\r\n                </Button>\r\n                <RegionPokemon clearText={clearText} />\r\n              </Form>\r\n            </Navbar.Collapse>\r\n          </>\r\n        )}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PokeItems = ({ name, id }) => {\r\n  return (\r\n    <Card className=\"py-3\">\r\n      <Card.Img\r\n        variant=\"top\"\r\n        style={{\r\n          width: \"200px\",\r\n          margin: \"0 auto\",\r\n          filter: \"drop-shadow(0 10px 10px rgba(0,0,0,0.2))\",\r\n        }}\r\n        src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h3 className=\"text-center\">\r\n            {id}# {name.toUpperCase()}\r\n          </h3>\r\n        </Card.Title>\r\n        <Card.Text className=\"d-flex justify-content-center my-4\">\r\n          <Link to={`/pokemon/${id}`}>\r\n            <Button>View Details </Button>\r\n          </Link>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokeItems;\r\n","const region_data = {\r\n  none: 0,\r\n  kanto: 2,\r\n  johto: 3,\r\n  hoenn: 4,\r\n  sinnoh: 5,\r\n  unova: 6,\r\n  kalos: 7,\r\n  alola: 8,\r\n\r\n  /*  https://pokeapi.co/api/v2/pokedex/4/ */\r\n  // kanto: {\r\n  //   limit: 1,\r\n  //   offset: 151,\r\n  // },\r\n  // johto: {\r\n  //   limit: 152,\r\n  //   offset: 251,\r\n  // },\r\n  // hoenn: {\r\n  //   limit: 252,\r\n  //   offset: 386,\r\n  // },\r\n  // sinnoh: {\r\n  //   limit: 387,\r\n  //   offset: 493,\r\n  // },\r\n  // unova: {\r\n  //   limit: 494,\r\n  //   offset: 649,\r\n  // },\r\n  // kalos: {\r\n  //   limit: 650,\r\n  //   offset: 721,\r\n  // },\r\n  // alola: {\r\n  //   limit: 722,\r\n  //   offset: 807,\r\n  // },\r\n};\r\n\r\nconst getPokemonID = (url) => {\r\n  return url.split(\"pokemon/\")[1].split(\"/\")[0];\r\n};\r\n\r\nconst getRegionalPokemonID = (url) => {\r\n  return url.split(\"pokemon-species/\")[1].split(\"/\")[0];\r\n};\r\n\r\nexport { region_data, getPokemonID, getRegionalPokemonID };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport PokeItems from \"./PokeItems\";\r\nimport PokemonContext from \"../reducers/PokemonContext\";\r\n\r\nimport Loader from \"./layouts/Loader\";\r\nimport { getPokemonID, getRegionalPokemonID } from \"../pokemonfunc\";\r\nconst PokemonScreen = () => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const {\r\n    pokemons,\r\n    getPokemons,\r\n    removeFilter,\r\n\r\n    filter,\r\n    regional_pokemon,\r\n  } = pokemonContext;\r\n\r\n  useEffect(() => {\r\n    removeFilter();\r\n    getPokemons();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <Row xs={1} md={3} className=\"g-4\">\r\n        {filter &&\r\n          filter?.map((ele, index) => (\r\n            <Col key={index + 1}>\r\n              {regional_pokemon == null && (\r\n                <PokeItems name={ele.name} id={getPokemonID(ele.url)} />\r\n              )}\r\n              {regional_pokemon && (\r\n                <PokeItems\r\n                  name={ele.pokemon_species.name}\r\n                  id={getRegionalPokemonID(ele.pokemon_species.url)}\r\n                />\r\n              )}\r\n            </Col>\r\n          ))}\r\n\r\n        {!filter &&\r\n          regional_pokemon &&\r\n          regional_pokemon?.map((ele, index) => (\r\n            <Col>\r\n              <PokeItems\r\n                name={ele.pokemon_species.name}\r\n                id={getRegionalPokemonID(ele.pokemon_species.url)}\r\n              />\r\n            </Col>\r\n          ))}\r\n        {!filter &&\r\n          !regional_pokemon &&\r\n          pokemons?.map((ele, index) => (\r\n            <Col key={index + 1}>\r\n              <PokeItems name={ele.name} id={getPokemonID(ele.url)} />\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PokemonScreen;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nconst PokemonAbility = ({ info, type }) => {\r\n  return (\r\n    <ListGroup\r\n      style={{ height: \"auto\", maxHeight: \"200px\", overflowY: \"scroll\" }}\r\n      as=\"ul\"\r\n      className=\"hidden\"\r\n    >\r\n      {type == \"ability\" &&\r\n        info?.abilities.map((ele, index) => (\r\n          <ListGroup.Item key={index} as=\"li\">\r\n            <i className=\"fas fa-star mx-3\" style={{ color: \"orange\" }}></i>\r\n\r\n            {ele.ability.name.toUpperCase()}\r\n          </ListGroup.Item>\r\n        ))}\r\n      {type == \"move\" &&\r\n        info?.moves.map((ele, index) => (\r\n          <ListGroup.Item key={index} as=\"li\">\r\n            <i className=\"fas fa-star mx-3\" style={{ color: \"orange\" }}></i>\r\n\r\n            {ele.move.name.toUpperCase()}\r\n          </ListGroup.Item>\r\n        ))}\r\n      {type == \"type\" &&\r\n        info?.types.map((ele, index) => (\r\n          <ListGroup.Item key={index} as=\"li\">\r\n            <i className=\"fas fa-star mx-3\" style={{ color: \"orange\" }}></i>\r\n\r\n            {ele.type.name.toUpperCase()}\r\n          </ListGroup.Item>\r\n        ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PokemonAbility;\r\n","import React from \"react\";\r\n\r\nconst PokemonBaseStat = ({ poke }) => {\r\n  return (\r\n    <div className=\"my-4\">\r\n      <h2 className=\"text-center\">Base Stats</h2>\r\n\r\n      {poke?.stats.map((ele, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 2fr\",\r\n            placeItems: \"center\",\r\n          }}\r\n        >\r\n          <strong style={{ display: \"inline-block\" }} className=\"mx-7\">\r\n            {ele.stat.name.toUpperCase()} :{\" \"}\r\n          </strong>\r\n          <div className=\"progress w-50 mx-auto \">\r\n            <div\r\n              className=\"progress-bar bg-danger\"\r\n              role=\"progressbar\"\r\n              style={{ width: `${ele.base_stat}%` }}\r\n              aria-valuenow={ele.base_stat}\r\n              aria-aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n            >\r\n              {ele.base_stat}%\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonBaseStat;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport PokemonContext from \"../../reducers/PokemonContext\";\r\nimport { getRegionalPokemonID } from \"../../pokemonfunc\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PokemonEvolve = ({ chain_url }) => {\r\n  /*https://pokeapi.co/api/v2/evolution-chain/1/ */\r\n\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const { getEvolutionChain, clearEvolutionChain, chain } = pokemonContext;\r\n\r\n  const getGen = () => {};\r\n  useEffect(() => {\r\n    if (!chain) {\r\n      clearEvolutionChain();\r\n      getEvolutionChain(chain_url);\r\n    }\r\n  }, [chain_url]);\r\n  return (\r\n    <div className=\"my-7\">\r\n      <h1 className=\"text-center\">Evolution Chain</h1>\r\n      <Row xs={1} md={3} className=\"g-4\">\r\n        {chain?.map((ele, index) => (\r\n          <Col>\r\n            <Card\r\n              className=\"text-center px-4 mx-auto my-3 py-3\"\r\n              style={{ width: \"18rem\" }}\r\n            >\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={`https://pokeres.bastionbot.org/images/pokemon/${getRegionalPokemonID(\r\n                  ele.url\r\n                )}.png`}\r\n                className=\"mx-auto\"\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{ele.name.toUpperCase()}</Card.Title>\r\n              </Card.Body>\r\n              <Link\r\n                className=\"btn btn-primary\"\r\n                to={`/pokemon/${getRegionalPokemonID(ele.url)}`}\r\n              >\r\n                View Details <span className=\"fas fa-arrow-right\"></span>\r\n              </Link>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonEvolve;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SkipPageButtons = ({ page }) => {\r\n  return (\r\n    <Card.Text\r\n      style={{ justifyContent: \"space-between\" }}\r\n      className=\"d-flex my-4\"\r\n    >\r\n      <Link\r\n        to={`/pokemon/${\r\n          parseInt(page) > 1 ? parseInt(page) - 1 : parseInt(page)\r\n        }`}\r\n        className=\"mx-3\"\r\n      >\r\n        <i className=\"fas fa-arrow-left mx-2\"></i>\r\n      </Link>\r\n      <Link\r\n        to={`/pokemon/${\r\n          parseInt(page) < 100 ? parseInt(page) + 1 : parseInt(page)\r\n        }`}\r\n        className=\"mx-3\"\r\n      >\r\n        <i className=\"fas fa-arrow-right mx-2\"></i>\r\n      </Link>\r\n    </Card.Text>\r\n  );\r\n};\r\n\r\nexport default SkipPageButtons;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nimport PokemonContext from \"../reducers/PokemonContext\";\r\nimport PokemonAbility from \"./layouts/PokemonAbility\";\r\nimport PokemonBaseStat from \"./layouts/PokemonBaseStat\";\r\nimport PokemonEvolve from \"./layouts/PokemonEvolve\";\r\nimport SkipPageButtons from \"./SkipPageButtons\";\r\n\r\nconst PokemonInfoScreen = ({ match }) => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const {\r\n    pokemons,\r\n    getPokemonInfo,\r\n    resetPokemonInfo,\r\n    getPokemonSpecies,\r\n    clearPokemonSpecies,\r\n    current_pokemon_species,\r\n    current_pokemon,\r\n    clearEvolutionChain,\r\n  } = pokemonContext;\r\n\r\n  const id = match.params.id;\r\n  const [showAbility, setShowAbility] = useState(true);\r\n  const [showMoves, setShowMoves] = useState(false);\r\n  const [showType, setShowType] = useState(false);\r\n\r\n  const showInfo = (infotype) => {\r\n    switch (infotype) {\r\n      case \"ability\":\r\n        setShowAbility(true);\r\n        setShowMoves(false);\r\n        setShowType(false);\r\n        return;\r\n      case \"moves\":\r\n        setShowAbility(false);\r\n        setShowMoves(true);\r\n        setShowType(false);\r\n        return;\r\n      case \"type\":\r\n        setShowAbility(false);\r\n        setShowMoves(false);\r\n        setShowType(true);\r\n        return;\r\n      default:\r\n        setShowAbility(true);\r\n        setShowMoves(false);\r\n        setShowType(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    resetPokemonInfo();\r\n    getPokemonInfo(id);\r\n    clearPokemonSpecies();\r\n    getPokemonSpecies(id);\r\n    clearEvolutionChain();\r\n    // eslint-disable-next-line\r\n  }, [match, id]);\r\n  return (\r\n    <section>\r\n      <Card className=\"py-1\">\r\n        <SkipPageButtons page={id} />\r\n        <Card.Img\r\n          variant=\"top\"\r\n          style={{\r\n            width: \"200px\",\r\n            margin: \"0 auto\",\r\n            filter: \"drop-shadow(0 10px 10px rgba(0,0,0,0.2))\",\r\n          }}\r\n          src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h3 className=\"text-center\">\r\n              # {current_pokemon?.name.toUpperCase()}\r\n            </h3>\r\n          </Card.Title>\r\n          <Card.Text\r\n            style={{ justifyContent: \"space-between\" }}\r\n            className=\"d-flex my-4\"\r\n          >\r\n            <Button onClick={() => showInfo(\"ability\")}>View Abilities </Button>\r\n            <Button onClick={() => showInfo(\"moves\")}>View Moves</Button>\r\n            <Button onClick={() => showInfo(\"type\")}>View Type</Button>\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        {showAbility && (\r\n          <PokemonAbility info={current_pokemon} type={\"ability\"} />\r\n        )}\r\n        {showMoves && <PokemonAbility info={current_pokemon} type=\"move\" />}\r\n        {showType && <PokemonAbility info={current_pokemon} type=\"type\" />}\r\n      </Card>\r\n      <PokemonBaseStat poke={current_pokemon} />\r\n      <PokemonEvolve chain_url={current_pokemon_species?.evolution_chain.url} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PokemonInfoScreen;\r\n","import React from \"react\";\nimport Header from \"./components/layouts/Header\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PokemonScreen from \"./components/PokemonScreen\";\nimport PokemonInfoScreen from \"./components/PokemonInfoScreen\";\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/pokemon/:id\" component={PokemonInfoScreen} />\n        <Route exact path=\"/\" component={PokemonScreen} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","export const GET_POKEMON = \"GET_POKEMON\";\r\nexport const FILTER = \"FILTER\";\r\nexport const REMOVE_FILTER = \"REMOVE_FILTER\";\r\n\r\n//regional pokemons action types\r\nexport const REGIONAL_POKEMON = \"REGIONAL_POKEMON\";\r\nexport const CLEAR_REGIONAL_FILTER = \"CLEAR_REGIONAL_FILTER\";\r\n\r\n//get single pokemon info\r\nexport const GET_POKEMON_INFO = \"GET_POKEMON_INFO\";\r\nexport const RESET_POKEMON_INFO = \"RESET_POKEMON_INFO\";\r\n\r\n//get pokemon species\r\nexport const GET_POKEMON_SPECIES = \"GET_POKEMON_SPECIES\";\r\nexport const CLEAR_POKEMON_SPECIES = \"CLEAR_POKEMON_SPECIES\";\r\n\r\n//get pokemon evolution chain\r\nexport const GET_POKEMON_CHAIN = \"GET_POKEMON_CHAIN\";\r\nexport const CLEAR_POKEMON_CHAIN = \"CLEAR_POKEMON_CHAIN\";\r\n","import {\r\n  CLEAR_POKEMON_CHAIN,\r\n  CLEAR_POKEMON_SPECIES,\r\n  CLEAR_REGIONAL_FILTER,\r\n  FILTER,\r\n  GET_POKEMON,\r\n  GET_POKEMON_CHAIN,\r\n  GET_POKEMON_INFO,\r\n  GET_POKEMON_SPECIES,\r\n  REGIONAL_POKEMON,\r\n  REMOVE_FILTER,\r\n  RESET_POKEMON_INFO,\r\n} from \"../types\";\r\nconst PokemonReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n    case FILTER:\r\n      if (state.regional_pokemon !== null) {\r\n        let f = state.regional_pokemon.filter((ele) =>\r\n          ele.pokemon_species.name.match(new RegExp(`${action.payload}`, \"gi\"))\r\n        );\r\n        console.log(f);\r\n        return {\r\n          ...state,\r\n          filter: f,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          filter: state.pokemons.filter((ele) =>\r\n            ele.name.match(new RegExp(`${action.payload}`, \"gi\"))\r\n          ),\r\n        };\r\n      }\r\n    case REMOVE_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: null,\r\n      };\r\n    case REGIONAL_POKEMON:\r\n      return {\r\n        ...state,\r\n        regional_pokemon: action.payload,\r\n      };\r\n    case GET_POKEMON_INFO:\r\n      return {\r\n        ...state,\r\n        current_pokemon: action.payload,\r\n      };\r\n    case GET_POKEMON_SPECIES:\r\n      return {\r\n        ...state,\r\n        current_pokemon_species: action.payload,\r\n      };\r\n    case GET_POKEMON_CHAIN:\r\n      return {\r\n        ...state,\r\n        chain: action.payload,\r\n      };\r\n    case RESET_POKEMON_INFO:\r\n      return {\r\n        ...state,\r\n        current_pokemon: null,\r\n      };\r\n    case CLEAR_POKEMON_CHAIN:\r\n      return {\r\n        ...state,\r\n        chain: null,\r\n      };\r\n\r\n    case CLEAR_REGIONAL_FILTER:\r\n      return {\r\n        ...state,\r\n        regional_pokemon: null,\r\n      };\r\n    case CLEAR_POKEMON_SPECIES:\r\n      return {\r\n        ...state,\r\n        current_pokemon_species: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PokemonReducer;\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  FILTER,\r\n  GET_POKEMON,\r\n  REMOVE_FILTER,\r\n  REGIONAL_POKEMON,\r\n  CLEAR_REGIONAL_FILTER,\r\n  GET_POKEMON_INFO,\r\n  RESET_POKEMON_INFO,\r\n  GET_POKEMON_SPECIES,\r\n  CLEAR_POKEMON_SPECIES,\r\n  GET_POKEMON_CHAIN,\r\n  CLEAR_POKEMON_CHAIN,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nimport PokemonContext from \"./PokemonContext\";\r\nimport PokemonReducer from \"./PokemonReducer\";\r\nimport { region_data } from \"../pokemonfunc\";\r\nconst PokemonState = (props) => {\r\n  const initialState = {\r\n    pokemons: [],\r\n    filter: null,\r\n    search: true,\r\n    regional_pokemon: null,\r\n    current_pokemon: null,\r\n    current_pokemon_species: null,\r\n    chain: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\r\n  const getPokemons = async () => {\r\n    const { data } = await axios.get(\r\n      \"https://pokeapi.co/api/v2/pokemon?limit=150\",\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_POKEMON,\r\n      payload: data.results,\r\n    });\r\n  };\r\n\r\n  const filterPokemon = (text) => {\r\n    dispatch({\r\n      type: FILTER,\r\n      payload: text,\r\n    });\r\n  };\r\n  const removeFilter = () => {\r\n    dispatch({\r\n      type: REMOVE_FILTER,\r\n    });\r\n  };\r\n\r\n  const regionalPokemon = async (region) => {\r\n    if (region == \"none\") return clearRegionalFilter();\r\n    const regional = region_data[region];\r\n    // const { limit, offset } = regional;\r\n\r\n    const { data } = await axios.get(\r\n      ` https://pokeapi.co/api/v2/pokedex/${regional}/`\r\n    );\r\n    dispatch({\r\n      type: REGIONAL_POKEMON,\r\n      payload: data.pokemon_entries,\r\n    });\r\n  };\r\n\r\n  //clear filter for regions\r\n  const clearRegionalFilter = () => {\r\n    dispatch({\r\n      type: CLEAR_REGIONAL_FILTER,\r\n    });\r\n  };\r\n\r\n  //get pokemon by id\r\n  const getPokemonInfo = async (id) => {\r\n    const { data } = await axios.get(\r\n      `https://pokeapi.co/api/v2/pokemon/${id}/`\r\n    );\r\n    dispatch({\r\n      type: GET_POKEMON_INFO,\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const resetPokemonInfo = () => {\r\n    dispatch({\r\n      type: RESET_POKEMON_INFO,\r\n    });\r\n  };\r\n\r\n  //get pokemon species\r\n  const getPokemonSpecies = async (id) => {\r\n    // const { data } = await fetch(\r\n    //   `https://pokeapi.co/api/v2/evolution-chain/${id}/`\r\n    // );\r\n    const { data } = await axios.get(\r\n      `https://pokeapi.co/api/v2/pokemon-species/${id}`,\r\n      {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: GET_POKEMON_SPECIES,\r\n      payload: data,\r\n    });\r\n  };\r\n  const clearPokemonSpecies = () => {\r\n    dispatch({\r\n      type: CLEAR_POKEMON_SPECIES,\r\n    });\r\n  };\r\n\r\n  //get pokemon evolution chain\r\n  const getEvolutionChain = async (url) => {\r\n    // axios\r\n    //   .get(chain)\r\n    //   .then(function (res) {\r\n    //     dispatch({\r\n    //       type: GET_POKEMON_CHAIN,\r\n    //       payload: res.data,\r\n    //     });\r\n    //   })\r\n    //   .catch(function (res) {\r\n    //     if (res instanceof Error) {\r\n    //       console.log(res.message);\r\n    //     } else {\r\n    //       console.log(res.data);\r\n    //     }\r\n    //   });\r\n    try {\r\n      const { data } = await axios.get(url);\r\n      const gen = [];\r\n      gen.push(data.chain.species);\r\n\r\n      if (data.chain.evolves_to) {\r\n        let newChain = data.chain.evolves_to[0];\r\n        gen.push(newChain.species);\r\n        if (newChain.evolves_to) {\r\n          gen.push(newChain.evolves_to[0].species);\r\n        }\r\n      }\r\n\r\n      dispatch({\r\n        type: GET_POKEMON_CHAIN,\r\n        payload: gen,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //clear pokemon ecolution chain\r\n  const clearEvolutionChain = () => {\r\n    dispatch({\r\n      type: CLEAR_POKEMON_CHAIN,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PokemonContext.Provider\r\n      value={{\r\n        pokemons: state.pokemons,\r\n        filter: state.filter,\r\n        search: state.search,\r\n        current_pokemon: state.current_pokemon,\r\n        regional_pokemon: state.regional_pokemon,\r\n        current_pokemon_species: state.current_pokemon_species,\r\n        chain: state.chain,\r\n        getPokemons,\r\n        filterPokemon,\r\n        removeFilter,\r\n        regionalPokemon,\r\n        getPokemonInfo,\r\n        resetPokemonInfo,\r\n        getPokemonSpecies,\r\n        clearPokemonSpecies,\r\n        getEvolutionChain,\r\n        clearEvolutionChain,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PokemonState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport PokemonState from \"./reducers/PokemonState\";\nReactDOM.render(\n  <PokemonState>\n    <App />\n  </PokemonState>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}