{"version":3,"sources":["reducers/PokemonContext.js","components/layouts/Header.js","components/PokeItems.js","components/layouts/Loader.js","components/PokemonScreen.js","components/layouts/PokemonAbility.js","components/SkipPageButtons.js","components/layouts/PokemonMoves.js","components/layouts/PokemonType.js","components/PokemonInfoScreen.js","App.js","reportWebVitals.js","types.js","reducers/PokemonReducer.js","reducers/PokemonState.js","index.js"],"names":["PokemonContext","createContext","Header","pokemonContext","useContext","filterPokemon","removeFilter","search","useState","text","setText","style","position","top","zIndex","Navbar","bg","expand","varient","Brand","to","className","Toggle","Collapse","id","Form","onSubmit","e","preventDefault","FormControl","type","placeholder","value","onChange","target","Button","variant","PokeItems","name","pokemon_id","url","split","Card","Img","width","margin","filter","src","Body","Title","toUpperCase","Text","Loader","Spinner","left","animation","PokemonScreen","pokemons","getPokemons","useEffect","length","map","ele","index","Col","Row","xs","md","PokemonAbility","pokemonInfo","ListGroup","height","maxHeight","overflowY","as","abilities","Item","color","ability","SkipPageButtons","page","justifyContent","parseInt","PokemonMoves","overflow","moves","move","PokemonType","types","PokemonInfoScreen","match","params","showAbility","setShowAbility","showMoves","setShowMoves","showType","setShowType","setPokemonInfo","showInfo","infotype","a","axios","get","data","getPokemonInfo","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_POKEMON","FILTER","REMOVE_FILTER","PokemonReducer","state","action","payload","RegExp","PokemonState","props","useReducer","dispatch","results","Provider","console","log","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd68757c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst PokemonContext = createContext();\r\n\r\nexport default PokemonContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Navbar, Button, Form, FormControl } from \"react-bootstrap\";\r\nimport PokemonContext from \"../../reducers/PokemonContext\";\r\nconst Header = () => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const { filterPokemon, removeFilter, search } = pokemonContext;\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      removeFilter();\r\n    }\r\n    filterPokemon(text);\r\n\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <header style={{ position: \"sticky\", top: \"0\", zIndex: \"2\" }}>\r\n      <Navbar bg=\"primary\" expand=\"lg\" varient=\"dark\">\r\n        <Navbar.Brand>\r\n          {\" \"}\r\n          <Link to=\"/\" className=\"text-white text-decoration-none\">\r\n            <i className=\"fas fa-home mx-.5\"></i>\r\n            POKEMON API{\" \"}\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        {search && (\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <Form onSubmit={submitHandler} className=\"d-flex my-1 mx-auto\">\r\n              <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-2\"\r\n                aria-label=\"Search\"\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n              <Button variant=\"outline-success\" className=\"btn btn-light\">\r\n                Search\r\n              </Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        )}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PokeItems = ({ name, url }) => {\r\n  const pokemon_id = url.split(\"pokemon/\")[1].split(\"/\")[0];\r\n\r\n  return (\r\n    <Card className=\"py-3\">\r\n      <Card.Img\r\n        variant=\"top\"\r\n        style={{\r\n          width: \"200px\",\r\n          margin: \"0 auto\",\r\n          filter: \"drop-shadow(0 10px 10px rgba(0,0,0,0.2))\",\r\n        }}\r\n        src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon_id}.png`}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h3 className=\"text-center\">\r\n            {pokemon_id}# {name.toUpperCase()}\r\n          </h3>\r\n        </Card.Title>\r\n        <Card.Text className=\"d-flex justify-content-center my-4\">\r\n          <Link to={`/pokemon/${pokemon_id}`}>\r\n            <Button>View Details </Button>\r\n          </Link>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokeItems;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        zIndex: 3,\r\n      }}\r\n      animation=\"border\"\r\n    >\r\n      {/* <span className=\"visually-hidden\">Loading...</span>/ */}\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport PokeItems from \"./PokeItems\";\r\nimport PokemonContext from \"../reducers/PokemonContext\";\r\nimport Loader from \"./layouts/Loader\";\r\nconst PokemonScreen = () => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const { pokemons, getPokemons, filter } = pokemonContext;\r\n\r\n  useEffect(() => {\r\n    getPokemons();\r\n  }, [pokemons, getPokemons, filter]);\r\n\r\n  return pokemons.length ? (\r\n    <section>\r\n      {filter !== null &&\r\n        filter?.map((ele, index) => (\r\n          <Col key={index + 1}>\r\n            <PokeItems name={ele.name} url={ele.url} />\r\n          </Col>\r\n        ))}\r\n      <Row xs={1} md={3} className=\"g-4\">\r\n        {filter == null &&\r\n          pokemons.map((ele, index) => (\r\n            <Col key={index + 1}>\r\n              <PokeItems name={ele.name} url={ele.url} />\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </section>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default PokemonScreen;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nconst PokemonAbility = ({ pokemonInfo }) => {\r\n  return (\r\n    <ListGroup\r\n      style={{ height: \"auto\", maxHeight: \"200px\", overflowY: \"scroll\" }}\r\n      as=\"ul\"\r\n      className=\"hidden\"\r\n    >\r\n      {pokemonInfo?.abilities.map((ele, index) => (\r\n        <ListGroup.Item key={index} as=\"li\">\r\n          <i className=\"fas fa-star mx-3\" style={{ color: \"orange\" }}></i>\r\n\r\n          {ele.ability.name.toUpperCase()}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PokemonAbility;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SkipPageButtons = ({ page }) => {\r\n  return (\r\n    <Card.Text\r\n      style={{ justifyContent: \"space-between\" }}\r\n      className=\"d-flex my-4\"\r\n    >\r\n      <Link\r\n        to={`/pokemon/${\r\n          parseInt(page) > 1 ? parseInt(page) - 1 : parseInt(page)\r\n        }`}\r\n        className=\"mx-3\"\r\n      >\r\n        <i className=\"fas fa-arrow-left mx-2\"></i>\r\n      </Link>\r\n      <Link\r\n        to={`/pokemon/${\r\n          parseInt(page) < 100 ? parseInt(page) + 1 : parseInt(page)\r\n        }`}\r\n        className=\"mx-3\"\r\n      >\r\n        <i className=\"fas fa-arrow-right mx-2\"></i>\r\n      </Link>\r\n    </Card.Text>\r\n  );\r\n};\r\n\r\nexport default SkipPageButtons;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nconst PokemonMoves = ({ pokemonInfo }) => {\r\n  return (\r\n    <ListGroup\r\n      style={{ height: \"auto\", maxHeight: \"300px\", overflow: \"scroll\" }}\r\n      as=\"ul\"\r\n    >\r\n      {pokemonInfo?.moves.map((ele, index) => (\r\n        <ListGroup.Item key={index} as=\"li\">\r\n          <i className=\"fas fa-star mx-3\" style={{ color: \"orange\" }}></i>\r\n\r\n          {ele.move.name.toUpperCase()}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PokemonMoves;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nconst PokemonType = ({ pokemonInfo }) => {\r\n  return (\r\n    <ListGroup\r\n      style={{ height: \"auto\", maxHeight: \"200px\", overflow: \"scroll\" }}\r\n      as=\"ul\"\r\n    >\r\n      {pokemonInfo?.types.map((ele, index) => (\r\n        <ListGroup.Item key={index} as=\"li\">\r\n          <i className=\"fas fa-star mx-3\" style={{ color: \"orange\" }}></i>\r\n\r\n          {ele.type.name.toUpperCase()}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PokemonType;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport PokemonContext from \"../reducers/PokemonContext\";\r\nimport PokemonAbility from \"./layouts/PokemonAbility\";\r\nimport SkipPageButtons from \"./SkipPageButtons\";\r\nimport PokemonMoves from \"./layouts/PokemonMoves\";\r\nimport PokemonType from \"./layouts/PokemonType\";\r\nconst PokemonInfoScreen = ({ match }) => {\r\n  const pokemonContext = useContext(PokemonContext);\r\n  const { pokemons, getPokemons } = pokemonContext;\r\n\r\n  const id = match.params.id;\r\n  const [showAbility, setShowAbility] = useState(true);\r\n  const [showMoves, setShowMoves] = useState(false);\r\n  const [showType, setShowType] = useState(false);\r\n  const [pokemonInfo, setPokemonInfo] = useState();\r\n\r\n  const showInfo = (infotype) => {\r\n    switch (infotype) {\r\n      case \"ability\":\r\n        setShowAbility(true);\r\n        setShowMoves(false);\r\n        setShowType(false);\r\n        return;\r\n      case \"moves\":\r\n        setShowAbility(false);\r\n        setShowMoves(true);\r\n        setShowType(false);\r\n        return;\r\n      case \"type\":\r\n        setShowAbility(false);\r\n        setShowMoves(false);\r\n        setShowType(true);\r\n        return;\r\n      default:\r\n        setShowAbility(true);\r\n        setShowMoves(false);\r\n        setShowType(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getPokemons();\r\n    const getPokemonInfo = async (id) => {\r\n      const { data } = await axios.get(\r\n        `https://pokeapi.co/api/v2/pokemon/${id}/`\r\n      );\r\n      setPokemonInfo(data);\r\n    };\r\n    getPokemonInfo(id);\r\n\r\n    // eslint-disable-next-line\r\n  }, [match, getPokemons, id]);\r\n  return (\r\n    <section>\r\n      <Card className=\"py-1\">\r\n        <SkipPageButtons page={id} />\r\n        <Card.Img\r\n          variant=\"top\"\r\n          style={{\r\n            width: \"200px\",\r\n            margin: \"0 auto\",\r\n            filter: \"drop-shadow(0 10px 10px rgba(0,0,0,0.2))\",\r\n          }}\r\n          src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h3 className=\"text-center\">\r\n              # {pokemons[id - 1]?.name.toUpperCase()}\r\n            </h3>\r\n          </Card.Title>\r\n          <Card.Text\r\n            style={{ justifyContent: \"space-between\" }}\r\n            className=\"d-flex my-4\"\r\n          >\r\n            <Button onClick={() => showInfo(\"ability\")}>View Abilities </Button>\r\n            <Button onClick={() => showInfo(\"moves\")}>View Moves</Button>\r\n            <Button onClick={() => showInfo(\"type\")}>View Type</Button>\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        {showAbility && <PokemonAbility pokemonInfo={pokemonInfo} />}\r\n        {showMoves && <PokemonMoves pokemonInfo={pokemonInfo} />}\r\n        {showType && <PokemonType pokemonInfo={pokemonInfo} />}\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PokemonInfoScreen;\r\n","import React from \"react\";\nimport Header from \"./components/layouts/Header\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PokemonScreen from \"./components/PokemonScreen\";\nimport PokemonInfoScreen from \"./components/PokemonInfoScreen\";\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Route exact path=\"/\" component={PokemonScreen} />\n      <Route exact path=\"/pokemon/:id\" component={PokemonInfoScreen} />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GET_POKEMON = \"GET_POKEMON\";\r\nexport const FILTER = \"FILTER\";\r\nexport const REMOVE_FILTER = \"REMOVE_FILTER\";\r\n","import { FILTER, GET_POKEMON, REMOVE_FILTER } from \"../types\";\r\nconst PokemonReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n    case FILTER:\r\n      return {\r\n        ...state,\r\n        filter: state.pokemons.filter((ele) =>\r\n          ele.name.match(new RegExp(`${action.payload}`, \"gi\"))\r\n        ),\r\n      };\r\n    case REMOVE_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PokemonReducer;\r\n","import { useReducer } from \"react\";\r\nimport { FILTER, GET_POKEMON, REMOVE_FILTER } from \"../types\";\r\nimport axios from \"axios\";\r\nimport PokemonContext from \"./PokemonContext\";\r\nimport PokemonReducer from \"./PokemonReducer\";\r\n\r\nconst PokemonState = (props) => {\r\n  const initialState = {\r\n    pokemons: [],\r\n    filter: null,\r\n    search: true,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\r\n  const getPokemons = async () => {\r\n    const { data } = await axios.get(\r\n      \"https://pokeapi.co/api/v2/pokemon?limit=100\"\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_POKEMON,\r\n      payload: data.results,\r\n    });\r\n  };\r\n\r\n  const filterPokemon = (text) => {\r\n    dispatch({\r\n      type: FILTER,\r\n      payload: text,\r\n    });\r\n    console.log(state.filter);\r\n  };\r\n  const removeFilter = () => {\r\n    dispatch({\r\n      type: REMOVE_FILTER,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PokemonContext.Provider\r\n      value={{\r\n        pokemons: state.pokemons,\r\n        filter: state.filter,\r\n        search: state.search,\r\n        getPokemons,\r\n        filterPokemon,\r\n        removeFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PokemonState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport PokemonState from \"./reducers/PokemonState\";\nReactDOM.render(\n  <PokemonState>\n    <App />\n  </PokemonState>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}